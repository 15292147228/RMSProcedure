<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hao.dao.SellDao">
    <insert id="addSell" parameterType="Sell" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert sell values(null,#{userId},#{aggregate},now(),#{roleId},#{state})
    </insert>

    <delete id="delSell" parameterType="list">
        delete from sell where id
        <foreach collection="list" item="ids" open="in(" close=")" separator=",">
            #{ids}
        </foreach>
    </delete>

    <select id="xiuBeforeQueSell" parameterType="int" resultMap="queRD">
    select * from sell where id=#{id}
    </select>
    <update id="xiuSell" parameterType="Sell">
        update sell
        <set>
            <if test="aggregate>0">aggregate=#{aggregate},</if>
            <if test="userId>0">userId=#{userId},</if>
            <if test="sellDate!=null">sellDate=#{sellDate},</if>
            <if test="state>=0">state=#{state}</if>
        </set>
        where id=#{id}
    </update>

    <select id="queAllSellCount" parameterType="Sell" resultType="int">
        select count(*) from sell
        where
        aggregate>0
        <if test="sellDate!=null"> and sellDate>=#{sellDate}</if>
        <if test="state>=0"> and state=#{state}</if>
    </select>

    <select id="queAllSell" parameterType="Sell" resultMap="queRD">
        select * from sell
        where
        aggregate>0
        <if test="sellDate!=null"> and sellDate>=#{sellDate}</if>
        <if test="state>=0"> and state=#{state}</if>
        <if test="id>0"> and id=#{id}</if>
    </select>

    <select id="queryByTimeOfSell" parameterType="int" resultType="Sell">
        <choose>
            <when test="num==1">select * from sell where period_diff(date_format(now(),'%y%m'),date_format(sellDate,'%y%m'))=1 and state=2</when>
            <when test="num==2">select * from sell where year(sellDate)=year(now()) and state=2</when>
            <when test="num==3">select * from sell where year(sellDate)=year(date_sub(now(),interval 1 year)) and state=2</when>
            <otherwise>select * from sell where date_format(sellDate,'%y%m') = date_format(curdate(),'%y%m') and state=2</otherwise>
        </choose>
    </select>
    <select id="queryByTimeOfSellCount" parameterType="int" resultType="int">
        <choose>
            <when test="num==1">select count(*) from sell where period_diff(date_format(now(),'%y%m'),date_format(sellDate,'%y%m'))=1 and state=2</when>
            <when test="num==2">select count(*) from sell where year(sellDate)=year(now()) and state=2</when>
            <when test="num==3">select count(*) from sell where year(sellDate)=year(date_sub(now(),interval 1 year)) and state=2</when>
            <otherwise>select count(*) from sell where date_format(sellDate,'%y%m') = date_format(curdate(),'%y%m') and state=2</otherwise>
        </choose>
    </select>
    <select id="querySellOfMoney" parameterType="int" resultType="Float">
        <choose>
            <when test="num==1">select sum(aggregate) from sell where period_diff(date_format(now(),'%y%m'),date_format(sellDate,'%y%m'))=1 and state=2</when>
            <when test="num==2">select sum(aggregate) from sell where year(sellDate)=year(now()) and state=2</when>
            <when test="num==3">select sum(aggregate) from sell where year(sellDate)=year(date_sub(now(),interval 1 year)) and state=2</when>
            <otherwise>select sum(aggregate) from sell where date_format(sellDate,'%y%m') = date_format(curdate(),'%y%m') and state=2</otherwise>
        </choose>
    </select>

    <resultMap id="queRD" type="Sell">
        <id column="id" property="id"></id>
        <id column="userId" property="userId"></id>
        <association property="userS" javaType="User"
                     column="userId" select="com.hao.dao.UserDao.xiuBeforeQueUser"
                     fetchType="lazy">
        </association>
        <collection property="sellDetails" javaType="list" ofType="SellDetail"
                    column="id" select="com.hao.dao.SellDetailDao.queryByRepIdSD"
                    fetchType="lazy">
        </collection>
    </resultMap>
</mapper>